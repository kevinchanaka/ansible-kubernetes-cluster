---
# Initialises control plane components on the main master node
# The main master node is where "kubeadm init" command is run
# All other nodes run the "kubeadm join" command

- name: Generate token used for kubeadm init and join commands
  command: kubeadm token generate
  register: kubeadm_token

- name: Create kubernetes folder
  file:
    path: /etc/kubernetes
    state: directory

- name: Create apiserver audit log folder
  file:
    path: /var/log/kube-apiserver-audit
    state: directory

- name: Copy kubeadm init config file
  template: 
    src: kubeadm-config.yaml.j2
    dest: /etc/kubernetes/kubeadm-config.yaml
  when: kubernetes_installed is false

- name: Copy audit policy config file
  copy: 
    src: audit-policy.yaml
    dest: /etc/kubernetes/audit-policy.yaml
  when: kubernetes_installed is false

- name: Initialise control plane components
  command: kubeadm init --config /etc/kubernetes/kubeadm-config.yaml
  register: kubeadm_init_output
  when: kubernetes_installed is false

- name: Upload certificates to kubeadm-certs secret
  command: kubeadm init phase upload-certs --upload-certs
  register: kubeadm_certs_output

  # The task before this play stores the token on the API server, but the above task can only be run once
  # Hence, running below task to manually store token on API server for future playbook runs
- name: Store generated token on control plane 
  command: kubeadm token create {{ kubeadm_token.stdout }}
  when: kubernetes_installed is true

- name: Get CA hash
  shell: openssl x509 -pubkey -in /etc/kubernetes/pki/ca.crt | openssl rsa -pubin -outform der 2>/dev/null | openssl dgst -sha256 -hex | sed 's/^.* //'
  register: ca_cert_hash

- name: Store information in host for future plays
  add_host:
    name: kubeadm_vars
    token: "{{ kubeadm_token.stdout }}"
    ca_cert_hash: "{{ ca_cert_hash.stdout }}"
    endpoint: '{{ control_plane_endpoint if ((control_plane_endpoint is defined) and (control_plane_endpoint != "")) else ansible_facts["default_ipv4"]["address"] }}' 
    certificate_key: '{{ kubeadm_certs_output["stdout_lines"][-1] }}'
