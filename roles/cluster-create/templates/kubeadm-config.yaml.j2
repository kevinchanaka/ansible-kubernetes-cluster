{% if kubeadm_token is defined %}
apiVersion: kubeadm.k8s.io/v1beta2
kind: InitConfiguration
bootstrapTokens:
- token: "{{ kubeadm_token["stdout"] }}"
  description: kubeadm bootstrap token
---
{% endif %}
kind: ClusterConfiguration
apiVersion: kubeadm.k8s.io/v1beta2
kubernetesVersion: v{{ kube_version_install }}
{% if control_plane_endpoint is defined and control_plane_endpoint != "" %}
controlPlaneEndpoint: {{ control_plane_endpoint }}
{% endif %}
apiServer:
  extraArgs:
    advertise-address: "{{ ansible_facts["default_ipv4"]["address"] }}"
{% if audit_logs_enable == true %}
    audit-policy-file: "/etc/kubernetes/audit-policy.yaml"
    audit-log-path: "/var/log/kube-apiserver-audit/audit.log"
  extraVolumes:
  - name: audit-policy
    hostPath: /etc/kubernetes/audit-policy.yaml
    mountPath: /etc/kubernetes/audit-policy.yaml
    readOnly: true
    pathType: File
  - name: audit-log
    hostPath: /var/log/kube-apiserver-audit
    mountPath: /var/log/kube-apiserver-audit
    readOnly: false
    pathType: Directory
{% endif %}
controllerManager:
  extraArgs:
    bind-address: "0.0.0.0"
{% if cronjob_local_timezone is defined and cronjob_local_timezone != "" %}
  extraVolumes:
  - name: tz-info
    hostPath: /usr/share/zoneinfo/{{ cronjob_local_timezone }}
    mountPath: /etc/localtime
    readOnly: true
    pathType: File
{% endif %}
scheduler:
  extraArgs:
    bind-address: "0.0.0.0"
networking:
  podSubnet: {{ pod_network_cidr }}
---
kind: KubeletConfiguration
apiVersion: kubelet.config.k8s.io/v1beta1
cgroupDriver: systemd
---
apiVersion: kubeproxy.config.k8s.io/v1alpha1
kind: KubeProxyConfiguration
metricsBindAddress: "0.0.0.0:10249"
