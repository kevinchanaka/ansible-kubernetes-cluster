---
# Upgrades kubernetes version

- name: Upgrade kubeadm
  shell: apt-get update && apt-get install -y --allow-change-held-packages kubeadm={{ kube_version_upgrade }}*

- name: Verify upgrade plan
  command: kubeadm upgrade plan
  register: upgrade_plan_output
  when: first_control_plane_node is true

- name: Print upgrade plan information
  debug:
    var: upgrade_plan_output["stdout_lines"]
  when: first_control_plane_node is true

- name: Upgrade kubernetes version for first control node
  command: kubeadm upgrade apply -y v{{ kube_version_upgrade }}
  when: first_control_plane_node is true

- name: Upgrade kubernetes version for other nodes
  command: kubeadm upgrade node
  when: first_control_plane_node is false

- name: Drain kubernetes node
  command: kubectl --kubeconfig /etc/kubernetes/admin.conf drain {{ ansible_facts["nodename"] }} --force --ignore-daemonsets --delete-emptydir-data
  delegate_to: '{{ groups["master"][0] }}'

- name: Update kubelet and kubectl
  shell: apt-get update && apt-get install -y --allow-change-held-packages kubelet={{ kube_version_upgrade }}* kubectl={{ kube_version_upgrade }}*

- name: Restart kubelet
  systemd:
    daemon_reload: yes
    name: kubelet
    state: restarted

- name: Uncordon kubernetes node
  command: kubectl --kubeconfig /etc/kubernetes/admin.conf uncordon {{ ansible_facts["nodename"] }}
  delegate_to: '{{ groups["master"][0] }}'