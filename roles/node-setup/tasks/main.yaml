---
# This role installs required prerequisite components 
# Setting up kernel, see https://kubernetes.io/docs/setup/production-environment/container-runtimes/ for more information

- name: Disable swap
  command: swapoff -a
  changed_when: false

- name: Disable swap in fstab
  replace:
    path: /etc/fstab
    regexp: '^([^#].*?\sswap\s+sw\s+.*)$'
    replace: '# \1'

- name: Load netfilter module (allows iptables to see bridged traffic)
  modprobe:
    name: br_netfilter

- name: Load overlay module (required for containerd)
  modprobe:
    name: overlay

- name: Load netfilter module on startup
  lineinfile:
    path: /etc/modules-load.d/modules.conf
    line: br_netfilter

- name: Load overlay module on startup
  lineinfile:
    path: /etc/modules-load.d/modules.conf
    line: overlay

- name: Add required sysctl for bridged IPv4 traffic
  sysctl:
    sysctl_file: /etc/sysctl.d/98-k8s.conf
    name: net.bridge.bridge-nf-call-iptables
    value: 1

- name: Add required sysctl for bridged IPv6 traffic
  sysctl:
    sysctl_file: /etc/sysctl.d/98-k8s.conf
    name: net.bridge.bridge-nf-call-ip6tables
    value: 1

- name: Add required sysctl for IP forwarding
  sysctl:
    sysctl_file: /etc/sysctl.d/98-k8s.conf
    name: net.ipv4.ip_forward
    value: 1

- name: Remove systemd-resolved DNS configuration
  file:
    src: /run/systemd/resolve/resolv.conf
    dest: /etc/resolv.conf
    owner: root
    group: root
    mode: "0777"
    state: link

- name: Install required packages
  apt:
    update_cache: yes
    name:
    - ca-certificates
    - curl
    - gnupg
    - lsb-release
    - python3-kubernetes

- name: Copy multipath config file
  copy:
    src: multipath.conf
    dest: /etc/multipath.conf
  notify:
  - Restart multipath-tools

- name: Install NFS and iSCSI packages
  apt:
    name:
    - nfs-common
    - open-iscsi
    - lsscsi
    - sg3-utils
    - multipath-tools
    - scsitools

- name: Enable multipath-tools service
  systemd:
    name: multipath-tools
    enabled: true
    state: started

- name: Enable open-iscsi service
  systemd:
    name: open-iscsi
    enabled: true
    state: started

- name: Create required directories
  file:
    path: "{{ item }}"
    state: directory
  loop:
  - /etc/kubernetes/
  - /etc/containerd/
  - /opt/cni/bin/

- name: Install GPG key for Kubernetes
  apt_key:
    keyring: /etc/apt/keyrings/kubernetes-apt-keyring.gpg
    url: https://pkgs.k8s.io/core:/stable:/v{{ '.'.join(version.kubernetes.split('.')[0:2]) }}/deb/Release.key

- name: Setup kubernetes stable repository
  apt_repository:
    repo: deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v{{ '.'.join(version.kubernetes.split('.')[0:2]) }}/deb/ /
    filename: kubernetes
    state: present

- name: Move containerd configuration
  copy:
    src: containerd-config.toml
    dest: /etc/containerd/config.toml
  notify:
  - Restart containerd

- name: Move crictl configuration
  copy:
    src: crictl.yaml
    dest: /etc/crictl.yaml

- name: Install containerd systemd file
  get_url:
    url: https://raw.githubusercontent.com/containerd/containerd/main/containerd.service
    dest: /etc/systemd/system/containerd.service
    mode: "0644"

- name: Install containerd
  unarchive:
    src: https://github.com/containerd/containerd/releases/download/v{{ version.containerd }}/containerd-{{ version.containerd }}-linux-amd64.tar.gz
    dest: /usr/local
    remote_src: yes
  notify:
  - Restart containerd

- name: Install runc
  get_url:
    url: https://github.com/opencontainers/runc/releases/download/v{{ version.runc }}/runc.amd64
    dest: /usr/local/sbin/runc
    mode: "0755"

- name: Install crictl
  unarchive:
    src: https://github.com/kubernetes-sigs/cri-tools/releases/download/v{{ version.crictl }}/crictl-v{{ version.crictl }}-linux-amd64.tar.gz
    dest: /usr/local/bin
    remote_src: yes

- name: Install CNI plugins
  unarchive:
    src: https://github.com/containernetworking/plugins/releases/download/v{{ version.cni }}/cni-plugins-linux-amd64-v{{ version.cni }}.tgz
    dest: /opt/cni/bin
    remote_src: yes

- name: Flush handlers to restart containerd
  meta: flush_handlers

- name: Ensure kubernetes packages are held if they exist
  dpkg_selections:
    name: "{{ item }}"
    selection: hold
  loop:
  - kubelet
  - kubectl
  - kubeadm
  ignore_errors: true

- name: Upgrade rest of OS packages
  apt:
    allow_change_held_packages: false
    update_cache: yes
    upgrade: yes

- name: Check if reboot required
  stat:
    path: /var/run/reboot-required
  register: reboot_required_file

- name: Reboot if required and requested
  reboot:
  when: (reboot | bool == true) and (reboot_required_file.stat.exists == true)
