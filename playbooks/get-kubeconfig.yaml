---
- name: Generate kubeconfig for admin user
  hosts: "{{ groups.masters[0] }}"
  become: yes
  tasks:
  - name: Create ClusterRoleBinding for admin user
    kubernetes.core.k8s:
      state: present
      kubeconfig: "{{ const.kubeconfig }}"
      definition:
        apiVersion: rbac.authorization.k8s.io/v1
        kind: ClusterRoleBinding
        metadata:
          name: kube-admin
        roleRef:
          apiGroup: rbac.authorization.k8s.io
          kind: ClusterRole
          name: cluster-admin
        subjects:
        - apiGroup: rbac.authorization.k8s.io
          kind: User
          name: kube-admin

  - name: Copy kubeadm init config file
    template: 
      src: ../kubeadm-config.yaml
      dest: "{{ const.kubeadm_config }}"

  - name: Generate kubeconfig file for admin user
    command: kubeadm kubeconfig user --client-name kube-admin --config {{ const.kubeadm_config }}
    register: admin_kubeconfig

  - name: Copy kubeconfig output into file on remote machine
    copy: 
      content: "{{ admin_kubeconfig.stdout }}"
      dest: ~/admin_kubeconfig

  - name: Copy kubeconfig file to local machine
    fetch:
      src: ~/admin_kubeconfig
      dest: ./

  - name: Delete admin kubeconfig on remote machine
    file:
      path: ~/admin_kubeconfig
      state: absent

- name: Merge kubeconfig
  hosts: localhost
  become: no
  vars:
    admin_kubeconfig: "{{ playbook_dir }}/{{ groups.masters[0] }}/root/admin_kubeconfig"
    default_kubeconfig: "{{ lookup('env', 'HOME') }}/.kube/config"
  tasks:
  - name: Generate merged kubeconfig
    command: kubectl config view --flatten
    register: merged_kubeconfig
    environment:
      KUBECONFIG: "{{ admin_kubeconfig }}:{{ default_kubeconfig }}"

  - name: Copy merged kubeconfig
    copy:
      content: "{{ merged_kubeconfig.stdout }}"
      dest: "{{ default_kubeconfig }}"
      backup: true

  - name: Delete unmerged kubeconfig
    file:
      path: "{{ playbook_dir }}/{{ groups.masters[0] }}"
      state: absent
